#+title: Commandments


* The First Commandment
/(final version from [[file:cpt5.rkt][Chapter 5]])/

When recurring on a /list of atoms/, ~lat~, ask 2 questions about it:
1. ~(null? lat)~
2. ~else~
When recurring on a /number/, ~n~, ask 2 questions about it:
1. ~(zero? n)~
2. ~else~
When recurring on a /list of S-expressions/, ~l~, ask 3 questions about it:
1. ~(null? l)~
2. ~(atom? (car l))~
3. ~else~

* The Second Commandment
/(first draft from [[file:cpt3.rkt][Chapter 3]])/

Use ~cons~ to *build lists*.

* The Third Commandment
/(first draft from [[file:cpt3.rkt][Chapter 3]])/

When building a list, describe the *first typical element*, and then ~cons~ it
onto the /natural recursion/.

* The Fourth Commandment
/(final version from [[file:cpt5.rkt][Chapter 5]])/

Always *change at least one argument* while recurring.
- When recurring on a /list of atoms/, ~lat~, use ~(cdr lat)~
- When recurring on a /number/, ~n~, use ~(sub1 n)~
- when recurring on a /list of S-expressions/, ~l~, use ~(car l)~ and ~(cdr l)~ if
  neither ~(null? l)~ nor ~(atom? (car l))~ are true

It must be changed to be closer to termination. The changing argument must be
tested in the *termination condition*:
- when using ~cdr~, test termination with ~null?~
- when using ~sub1~, test termination with ~zero?~

* The Fifth Commandment
/(first draft from [[file:cpt4.rkt][Chapter 4]])/

When building a value with ~+~ , always use ~0~ for the value of the *terminating
line*, for adding ~0~ does not change the value of an /addition/.

When building a value with ~Ã—~ , always use ~1~ for the value of the *terminating
line*, for multiplying by ~1~ does not change the value of a /multiplication/.

When building a value with ~cons~ , always use ~()~ for the value of the
*terminating line*.

* The Sixth Commandment
/(first draft from [[file:cpt5.rkt][Chapter 5]])/

Simplify only /after/ the function is *correct*.

* The Seventh Commandment
/(first draft from [[file:cpt6.rkt][Chapter 6]])/

Recur on the *subparts* that are of the /same nature/:
- On the *sublists* of a /list/.
- On the *subexpressions* of an /arithmetic expression/.

* The Eighth Commandment
/(first draft from [[file:cpt6.rkt][Chapter 6]])/

Use *help functions* to /abstract/ from representations.

* The Ninth Commandment
/(first draft from [[file:cpt8.rkt][Chapter 8]])/

*Abstract common patterns* with a new function.

* The Tenth Commandment
/(first draft from [[file:cpt8.rkt][Chapter 8]])/

*Build functions* to collect more than one value at a time.
